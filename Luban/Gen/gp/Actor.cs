//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace cfg.gp
{
public sealed partial class Actor :  Bright.Config.BeanBase 
{
    public Actor(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        name = _buf.ReadString();
        element = (gp.E_Element)_buf.ReadInt();
        maxHP = _buf.ReadInt();
        speed = _buf.ReadInt();
        size = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);skills = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); skills.Add(_e0);}}
        prefab = _buf.ReadString();
        icon = _buf.ReadString();
        PostInit();
    }

    public static Actor DeserializeActor(ByteBuf _buf)
    {
        return new gp.Actor(_buf);
    }

    /// <summary>
    /// 主键ID
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string name { get; private set; }
    /// <summary>
    /// 元素属性
    /// </summary>
    public gp.E_Element element { get; private set; }
    /// <summary>
    /// 最大HP
    /// </summary>
    public int maxHP { get; private set; }
    /// <summary>
    /// 行动速度
    /// </summary>
    public int speed { get; private set; }
    /// <summary>
    /// 身体大小
    /// </summary>
    public int size { get; private set; }
    /// <summary>
    /// 技能
    /// </summary>
    public System.Collections.Generic.List<int> skills { get; private set; }
    /// <summary>
    /// prefab资源
    /// </summary>
    public string prefab { get; private set; }
    /// <summary>
    /// icon资源
    /// </summary>
    public string icon { get; private set; }

    public const int __ID__ = 1117036688;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "name:" + name + ","
        + "element:" + element + ","
        + "maxHP:" + maxHP + ","
        + "speed:" + speed + ","
        + "size:" + size + ","
        + "skills:" + Bright.Common.StringUtil.CollectionToString(skills) + ","
        + "prefab:" + prefab + ","
        + "icon:" + icon + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}