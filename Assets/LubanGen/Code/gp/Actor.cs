//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace cfg.gp
{
public sealed partial class Actor :  Bright.Config.BeanBase 
{
    public Actor(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Class = (gp.HeroClass)_buf.ReadInt();
        Level = _buf.ReadInt();
        HudOffset = _buf.ReadFloat();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SkillIds = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); SkillIds.Add(_e0);}}
        PostInit();
    }

    public static Actor DeserializeActor(ByteBuf _buf)
    {
        return new gp.Actor(_buf);
    }

    /// <summary>
    /// 主键ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 稀有度
    /// </summary>
    public gp.HeroClass Class { get; private set; }
    /// <summary>
    /// 等级
    /// </summary>
    public int Level { get; private set; }
    /// <summary>
    /// UI偏移
    /// </summary>
    public float HudOffset { get; private set; }
    /// <summary>
    /// 技能
    /// </summary>
    public System.Collections.Generic.List<int> SkillIds { get; private set; }
    public System.Collections.Generic.List<gp.Skill> SkillIds_Ref { get; private set; }

    public const int __ID__ = 1117036688;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        { gp.TblSkill __table = (gp.TblSkill)_tables["gp.TblSkill"]; this.SkillIds_Ref = new System.Collections.Generic.List<gp.Skill>(); foreach(var __e in SkillIds) { this.SkillIds_Ref.Add(__table.GetOrDefault(__e)); } }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Class:" + Class + ","
        + "Level:" + Level + ","
        + "HudOffset:" + HudOffset + ","
        + "SkillIds:" + Bright.Common.StringUtil.CollectionToString(SkillIds) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}